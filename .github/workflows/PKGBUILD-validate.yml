---
name: ci

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*'

jobs:
  validation:
    runs-on: ubuntu-latest
    name: Validate a Pull Request
    steps:
      - uses: actions/checkout@v1

      - name: Validate PKGBUILD
        id: validate-pkgbuild
        uses: 2m/arch-pkgbuild-builder@v1.18
        with:
          target: 'pkgbuild'
          pkgname: '.build_action'

      - name: Validate SRCINFO
        id: validate-srcinfo
        uses: 2m/arch-pkgbuild-builder@v1.18
        with:
          target: 'srcinfo'
          pkgname: '.build_action'

      - name: Validate binary
        id: validate-ssserver
        uses: 2m/arch-pkgbuild-builder@v1.18
        with:
          target: 'run'
          pkgname: '.build_action'
          command: 'ssserver-rust -V'

      - name: Validate binary
        id: validate-ssmanager
        uses: 2m/arch-pkgbuild-builder@v1.18
        with:
          target: 'run'
          pkgname: '.build_action'
          command: 'ssmanager-rust -V'

      - name: Validate binary
        id: validate-sslocal
        uses: 2m/arch-pkgbuild-builder@v1.18
        with:
          target: 'run'
          pkgname: '.build_action'
          command: 'sslocal-rust -V'

      - name: Upload Arch Linux Release
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: '.build_action/shadowsocks-rust-*-*-x86_64.pkg.tar.zst'
          asset_name: 'shadowsocks-rust-*-*-x86_64.pkg.tar.zst'
          asset_content_type: application/octet-stream
